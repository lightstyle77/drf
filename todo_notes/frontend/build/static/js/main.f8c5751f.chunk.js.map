{"version":3,"sources":["components/Menu.js","components/Footer.js","components/User.js","components/Project.js","components/Note.js","components/ProjectNote.js","components/Auth.js","components/ProjectForm.js","components/NoteForm.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","className","to","id","this","isAuthenticated","onClick","logout","username","React","Component","Footer","Date","getFullYear","UserItem","user","first_name","last_name","email","UserList","users","style","scope","map","ProjectItem","project","deleteProject","projectUsers","filter","prjUserId","projectUsersDispatched","i","length","push","name","type","ProjectList","projects","NoteItem","author","note","updateNote","body","createdAt","updatedAt","defaultChecked","isActive","onChange","NoteList","notes","find","ProjectNoteItem","ProjectEditPopUp","toggle","updateProject","changeHandler","event","target","value","split","onSubmit","preventDefault","submitHandler","htmlFor","placeholder","defaultValue","repositoryUrl","join","ProjectNotesList","projectId","useParams","projectNotes","useState","popToggled","setPopToggled","href","url","LoginForm","state","password","setState","getToken","ProjectForm","createProject","item","NoteForm","createNote","baseUrl","apiUrl","getApiUrl","path","notFound404","location","pathname","App","setTokenAndUser","token","headers","getHeaders","axios","all","get","then","spread","data","results","catch","error","console","cookies","Cookies","set","loadData","post","response","err","alert","getTokenAndUserFromStorage","delete","patch","condition","deleteNote","restoreNote","log","exact","component","User","Project","ProjectNote","Note","getTokenAndUser","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8c5751f.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from 'react-router-dom';\n\n\nclass Menu extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n                <Link to='/' className='ms-2 navbar-brand mb-0 h1'>\n                    Menu\n                </Link>\n                <div className='collapse navbar-collapse' id='navbarNavAltMarkup'>\n                    <div className='navbar-nav'>\n                        <Link to='/users' className='nav-item nav-link active'>\n                            List of all users\n                        </Link>\n                        <Link to='/projects' className='nav-item nav-link active'>\n                            List of all projects\n                        </Link>\n                        <Link to='/notes' className='nav-item nav-link active'>\n                            List of all notes\n                        </Link>\n                    </div>\n                </div>\n                {this.props.isAuthenticated ?\n                    <a onClick={() => {\n                        this.props.logout()\n                    }} className='ms-2 navbar-brand'>{`${this.props.username} | Logout`}</a> :\n                    <Link to='/login' className='ms-2 navbar-brand'>\n                        Login\n                    </Link>\n                }\n            </nav>\n        )\n    }\n}\n\nexport default Menu\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst Footer = () => {\n    return (\n        <footer className='footer-copyright fixed-bottom text-center bg-light py-3'>\n            &copy; {new Date().getFullYear()} Copyright:\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst UserItem = ({user}) => {\n    return (\n        <tr>\n            <td>\n                {user?.first_name}\n            </td>\n            <td>\n                {user?.last_name}\n            </td>\n            <td>\n                {user?.email}\n            </td>\n            <td>\n                {user?.username}\n            </td>\n        </tr>\n    )\n};\n\nconst UserList = ({users}) => {\n    return (\n        <table className='table table-striped table-borderless mx-auto w-auto' style={{'width': '50%'}}>\n            <thead>\n            <tr>\n                <th scope='col' style={{'width': '15%'}}>First name</th>\n                <th scope='col' style={{'width': '25%'}}>Last name</th>\n                <th scope='col' style={{'width': '30%'}}>Email</th>\n                <th scope='col' style={{'width': '30%'}}>Username</th>\n            </tr>\n            </thead>\n            <tbody>\n            {users.map((user) => <UserItem key={/* email key is unique */user.email} user={user}/>)}\n            </tbody>\n        </table>\n    )\n};\n\nexport default UserList;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from \"react-router-dom\";\n\n\nconst ProjectItem = ({users, project, deleteProject}) => {\n    let projectUsers = users?.filter((user) => project?.users.filter((prjUserId) => user.id === prjUserId));\n    let projectUsersDispatched = [];\n    for (let i = 0; i < project?.users.length; i++) {\n        projectUsersDispatched.push({\n            first_name: projectUsers?.[i].first_name,\n            last_name: projectUsers?.[i].last_name,\n            id: projectUsers?.[i].id\n        })\n    }\n    return (\n        <tr>\n            <td>\n                <Link to={`/projects/${project?.id}`} className='text-decoration-none'>{project?.name}</Link>\n            </td>\n            <td>\n                {projectUsersDispatched.map((user) =>\n                    <Link to={`/users/${user.id}`} className='text-decoration-none' key={user.id}>\n                        {`${user.first_name} ${user.last_name}, `}\n                    </Link>\n                )}\n            </td>\n            <td>\n                <button className='btn btn-danger' onClick={() => deleteProject(project?.id)} type='button'>\n                    Delete\n                </button>\n            </td>\n        </tr>\n    )\n};\n\nconst ProjectList = ({users, projects, deleteProject}) => {\n    return (\n        <table className='table table-striped table-borderless mx-auto w-auto' style={{'width': '20%'}}>\n            <thead>\n            <tr>\n                <th scope='col' style={{'width': '30%'}}>Project name</th>\n                <th scope='col' style={{'width': '55%'}}>Users</th>\n                <th scope='col' style={{'width': '15%'}}>Action</th>\n            </tr>\n            </thead>\n            <tbody>\n            {projects.map((project) => <ProjectItem key={/* name key is unique */project.name}\n                                                    users={users}\n                                                    project={project}\n                                                    deleteProject={deleteProject}/>)}\n            </tbody>\n        </table>\n    )\n};\n\nexport default ProjectList;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from \"react-router-dom\";\n\n\nconst NoteItem = ({project, author, note, updateNote}) => {\n    return (\n        <tr>\n            <td>\n                <Link to={`/projects/${project?.id}`} className='text-decoration-none'>{project?.name}</Link>\n            </td>\n            <td>\n                <Link to={`/users/${author?.id}`}\n                      className='text-decoration-none'>{`${author?.first_name} ${author?.last_name}`}</Link>\n            </td>\n            <td>\n                {note?.body}\n            </td>\n            <td>\n                {note?.createdAt}\n            </td>\n            <td>\n                {note?.updatedAt}\n            </td>\n            <td>\n                <input type='checkbox' style={{'width': '20px', 'height': '20px'}} defaultChecked={note?.isActive}\n                       onChange={() => updateNote(note?.id)}/>\n            </td>\n        </tr>\n    )\n};\n\nconst NoteList = ({projects, users, notes, updateNote}) => {\n    return (\n        <table className='table table-striped table-borderless mx-auto w-auto' style={{'width': '20%'}}>\n            <thead>\n            <tr>\n                <th scope='col' style={{'width': '25%'}}>Project</th>\n                <th scope='col' style={{'width': '25%'}}>Author</th>\n                <th scope='col' style={{'width': '25%'}}>Body</th>\n                <th scope='col' style={{'width': '10%'}}>Created</th>\n                <th scope='col' style={{'width': '10%'}}>Updated</th>\n                <th scope='col' style={{'width': '5%'}}>Active</th>\n            </tr>\n            </thead>\n            <tbody>\n            {notes.map((note) => {\n                let project = projects?.find((project) => project.id === note.project);\n                let author = users?.find((user) => user.id === note.author);\n                return <NoteItem key={note.id} project={project} author={author} note={note} updateNote={updateNote}/>\n            })}\n            </tbody>\n        </table>\n    )\n};\n\nexport default NoteList;\n","import React, {useState} from 'react';\nimport {Link, useParams} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst ProjectNoteItem = ({author, note, updateNote}) => {\n    return (\n        <tr>\n            <td>\n                <Link to={`/users/${author?.id}`}\n                      className='text-decoration-none'>{`${author?.first_name} ${author?.last_name}`}</Link>\n            </td>\n            <td>\n                {note?.body}\n            </td>\n            <td>\n                {note?.createdAt}\n            </td>\n            <td>\n                {note?.updatedAt}\n            </td>\n            <td>\n                <input type='checkbox' style={{'width': '20px', 'height': '20px'}} defaultChecked={note?.isActive}\n                       onChange={() => updateNote(note?.id)}/>\n            </td>\n        </tr>\n    )\n};\n\nexport const ProjectEditPopUp = ({project, toggle, updateProject}) => {\n    const props = {...project};\n    const submitHandler = (event) => {\n        event.preventDefault();\n        updateProject(props);\n        toggle();\n    }\n    const changeHandler = (event) => {\n        if (event.target.name === 'users') {\n            props[event.target.name] = event.target.value.split(';').map((id) => +id);\n        } else {\n            props[event.target.name] = event.target.value;\n        }\n    }\n    return (\n        <form className='col-2 text-center mx-auto w-10' onSubmit={(event => submitHandler(event))}>\n            <div className='form-group'>\n                <div className='form-group'>\n                    <label htmlFor='Name'>Project name</label>\n                    <input type='text' placeholder='Project name' id='Name' name='name'\n                           className='form-control'\n                           onChange={(event) => changeHandler(event)}\n                           defaultValue={props.name}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='Url'>Project URL</label>\n                    <input type='text' placeholder='Project URL' id='Url' name='url'\n                           className='form-control'\n                           onChange={(event) => changeHandler(event)}\n                           defaultValue={props.repositoryUrl}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label htmlFor='Users IDs (semicolon separated, e.g., (1;2;3))'>Users</label>\n                    <input type='text' placeholder='User IDs (semicolon separated, e.g., (1;2;3))' id='Users' name='users'\n                           className='form-control'\n                           onChange={(event) => changeHandler(event)}\n                           defaultValue={props.users.join(';')}\n                    />\n                </div>\n                <button className='btn btn-success' type='submit'>Update!</button>\n            </div>\n        </form>\n    );\n}\n\nconst ProjectNotesList = ({users, projects, notes, deleteProject, updateProject, updateNote}) => {\n    let {projectId} = useParams();\n    let project = projects?.filter((project) => project.id === +projectId);\n    let projectNotes = notes?.filter((note) => note.project === +projectId);\n    let projectUsers = users?.filter((user) => project?.[0].users?.filter((prjUserId) => user.id === prjUserId));\n    let projectUsersDispatched = [];\n    for (let i = 0; i < project?.[0].users?.length; i++) {\n        projectUsersDispatched.push({\n            first_name: projectUsers?.[i].first_name,\n            last_name: projectUsers?.[i].last_name,\n            id: projectUsers?.[i].id\n        })\n    }\n    const [popToggled, setPopToggled] = useState(false);\n    const togglePopUp = () => popToggled ? setPopToggled(false) : setPopToggled(true);\n    return (\n        <div>\n            <h1 className='text-center'> Project: <a className='text-decoration-none'\n                                                     href={project?.[0].url}> {project?.[0].name} </a></h1>\n            <h2 className='text-center'> Participants: {\n                projectUsersDispatched.length > 0\n                    ? projectUsersDispatched.map((user) =>\n                        <Link to={`/users/${user.id}`} className='text-decoration-none' key={user.id}>\n                            {`${user.first_name} ${user.last_name}, `}\n                        </Link>\n                    )\n                    : 'no one'\n            }</h2>\n            <div className='text-center mx-auto w-25 d-flex justify-content-around'>\n                <button className='btn btn-danger' onClick={() => deleteProject(project?.id)} type='button'>\n                    Delete Project\n                </button>\n                <button className='btn btn-warning'\n                        onClick={() => togglePopUp()}\n                        type='button'>\n                    Update Project\n                </button>\n            </div>\n            <table className='table table-striped table-borderless mx-auto w-auto' style={{'width': '10%'}}>\n                <thead>\n                <tr>\n                    <th scope='col' style={{'width': '10%'}}>Author</th>\n                    <th scope='col' style={{'width': '65%'}}>Body</th>\n                    <th scope='col' style={{'width': '10%'}}>Created</th>\n                    <th scope='col' style={{'width': '10%'}}>Updated</th>\n                    <th scope='col' style={{'width': '5%'}}>Active</th>\n                </tr>\n                </thead>\n                <tbody>\n                {projectNotes.map((note) => {\n                    let author = users?.find((user) => user.id === note.author);\n                    return <ProjectNoteItem key={note.id} author={author} note={note} updateNote={updateNote}/>;\n                })}\n                </tbody>\n            </table>\n            <div>\n                {popToggled\n                    ? <ProjectEditPopUp project={project?.[0]} updateProject={updateProject}\n                                        toggle={() => setPopToggled(false)}/>\n                    : null}\n            </div>\n        </div>\n    )\n};\n\nexport default ProjectNotesList;\n","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\n\n\nclass LoginForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: ''\n        }\n    }\n\n    changeHandler(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    submitHandler(event) {\n        event.preventDefault();\n        this.props.getToken(this.state.username, this.state.password);\n    }\n\n    render() {\n        return (\n            <div className='container-fluid h-100'>\n                <div className='h-100 justify-content-center align-items-center d-flex'>\n                    <form className='col-2' onSubmit={(event => this.submitHandler(event))}>\n                        <div className='form-group'>\n                            <div className='form-group'>\n                                <label htmlFor='Login'>Login</label>\n                                <input type='text' placeholder='Login' id='Login' name='username'\n                                       className='form-control'\n                                       onChange={(event) => this.changeHandler(event)}/>\n                            </div>\n                            <div className='form-group pt-2 pb-2'>\n                                <label htmlFor='Password'>Password</label>\n                                <input type='password' placeholder='Password' id='Password' name='password'\n                                       className='form-control'\n                                       onChange={(event) => this.changeHandler(event)}/>\n                            </div>\n                            <button type='submit' className='btn btn-primary'>Login</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default LoginForm;\n","import React from \"react\";\n\nclass ProjectForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            repositoryUrl: '',\n            users: props?.users?.[0]?.id,\n        }\n    }\n\n    changeHandler(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    submitHandler(event) {\n        event.preventDefault()\n        this.props.createProject(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className='text-center'> Create new project</h1>\n                <form className='col-2 text-center mx-auto w-10' onSubmit={(event => this.submitHandler(event))}>\n                    <div className='form-group'>\n                        <div className='form-group'>\n                            <label htmlFor='Name'>Project name</label>\n                            <input type='text' placeholder='Project name' id='Name' name='name'\n                                   className='form-control'\n                                   onChange={(event) => this.changeHandler(event)}\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <label htmlFor='Url'>Project URL</label>\n                            <input type='text' placeholder='Project URL' id='Url' name='repositoryUrl'\n                                   className='form-control'\n                                   onChange={(event) => this.changeHandler(event)}\n                            />\n                        </div>\n                        <div className='form-group'>\n                            <label htmlFor='Users'>Users</label>\n                            <select id='Users' name=\"users\" className='form-control'\n                                    onChange={(event) => this.changeHandler(event)}>\n                                {this.props.users.map((item) => <option value={item.id}>{item.username}</option>)}\n                            </select>\n                        </div>\n                        <button className='btn btn-success' type='submit'>Create!</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default ProjectForm\n","import React from \"react\";\n\nclass NoteForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            project: props?.projects?.[0]?.id,\n            body: ''\n        }\n    }\n\n    changeHandler(event) {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    submitHandler(event) {\n        event.preventDefault()\n        this.props.createNote(this.state)\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className='text-center'> Create new note</h1>\n                <form className='col-2 text-center mx-auto w-10' onSubmit={(event => this.submitHandler(event))}>\n                    <div className='form-group'>\n                        <div className='form-group'>\n                            <label htmlFor='Project'>Project</label>\n                            <select name=\"project\" className='form-control'\n                                    onChange={(event) => this.changeHandler(event)}>\n                                {this.props.projects.map((item) => <option value={item.id}>{item.name}</option>)}\n                            </select>\n                        </div>\n                        <div className='form-group'>\n                            <label htmlFor='Body'>Note body</label>\n                            <input type='text' placeholder='Note body' id='Body' name='body'\n                                   className='form-control'\n                                   onChange={(event) => this.changeHandler(event)}\n                            />\n                        </div>\n                        <button className='btn btn-success' type='submit'>Create!</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n\n}\n\nexport default NoteForm\n","import './App.css';\nimport React from 'react';\nimport {BrowserRouter as Router, Switch, Route, Redirect} from 'react-router-dom';\nimport axios from 'axios';\nimport Menu from './components/Menu';\nimport Footer from './components/Footer';\nimport UserList from './components/User';\nimport ProjectList from './components/Project';\nimport NoteList from './components/Note';\nimport ProjectNotesList from './components/ProjectNote';\nimport LoginForm from './components/Auth';\nimport Cookies from 'universal-cookie/es6';\nimport ProjectForm from \"./components/ProjectForm\";\nimport NoteForm from \"./components/NoteForm\";\n\nconst baseUrl = 'http://127.0.0.1:8000';\nconst apiUrl = `${baseUrl}/api`;\nconst getUrl = (path) => `${baseUrl}/${path}/`;\nconst getApiUrl = (path) => `${apiUrl}/${path}/`;\n\nconst notFound404 = ({location}) => {\n    return (\n        <div className='d-flex align-items-center justify-content-center' style={{'height': '30em'}}>\n            <h1 className='d-inline-block'>Page '{location.pathname}' not found</h1>\n        </div>\n\n    )\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'users': [],\n            'projects': [],\n            'notes': [],\n            'token': '',\n            'username': ''\n        };\n    }\n\n    logout() {\n        this.setTokenAndUser('', '');\n        this.setState({\n            'users': [],\n            'projects': [],\n            'notes': []\n        });\n    }\n\n    isAuthenticated() {\n        return !!this.state?.token;\n    }\n\n    getHeaders() {\n        let headers = {\n            'Content-Type': 'application/json'\n        }\n        if (this.isAuthenticated()) {\n            headers['Authorization'] = `Token ${this.state.token}`;\n        }\n        return headers;\n    }\n\n    loadData() {\n        if (!this.isAuthenticated()) return;\n        const headers = this.getHeaders();\n        axios.all(\n            [\n                axios.get(getApiUrl('users'), {headers}),\n                axios.get(getApiUrl('projects'), {headers}),\n                axios.get(getApiUrl('notes'), {headers})\n            ]\n        )\n            .then(axios.spread((users, projects, notes) => {\n                this.setState(\n                    {\n                        'users': users.data.results,\n                        'projects': projects.data.results,\n                        'notes': notes.data.results,\n                    }\n                )\n            }))\n            .catch(error => console.error(error));\n    }\n\n    setTokenAndUser(token, username) {\n        const cookies = new Cookies();\n        cookies.set('token', token);\n        cookies.set('username', username);\n        this.setState({token, username}, () => this.loadData());\n    }\n\n    getTokenAndUser(username, password) {\n        axios.post(getUrl('api-token-auth'), {username, password})\n            .then(response => {\n                this.setTokenAndUser(response.data['token'], username);\n            }).catch(err => alert('Invalid login or password'))\n    }\n\n    getTokenAndUserFromStorage() {\n        const cookies = new Cookies();\n        const token = cookies.get('token');\n        const username = cookies.get('username');\n        this.setState({token, username}, () => this.loadData());\n    }\n\n    componentDidMount() {\n        this.getTokenAndUserFromStorage();\n    }\n\n    deleteNote(id) {\n        if (!this.isAuthenticated()) return;\n        const headers = this.getHeaders();\n        axios.delete(getApiUrl(`notes/${id}`), {headers})\n            .then(response => {\n                this.setState({\n                    notes: this.state.notes.map((note) => {\n                        if (note.id === id) {\n                            note.isActive = false;\n                        }\n                        return note;\n                    })\n                })\n                // Мы же не удаляем заметки полностью, а просто деактивируем. Поэтому надо просто снять галочку\n                // this.setState({notes: this.state.notes.filter((note) => note.id !== id)})\n            })\n            .catch(error => console.error(error));\n    }\n\n    restoreNote(id) {\n        const headers = this.getHeaders();\n        axios.patch(getApiUrl(`notes/${id}`), {isActive: true}, {headers})\n            .then(response => {\n                this.setState({\n                    notes: this.state.notes.map((note) => {\n                        if (note.id === id) {\n                            note.isActive = true;\n                        }\n                        return note;\n                    })\n                })\n            })\n            .catch(error => console.error(error));\n    }\n\n    updateNote(id) {\n        this.state.notes.find((note) => {\n            let condition = note.id === id;\n            if (condition) {\n                if (note.isActive) {\n                    this.deleteNote(id);\n                } else {\n                    this.restoreNote(id);\n                }\n            }\n            return condition;\n        });\n    }\n\n    createNote(props) {\n        if (!this.isAuthenticated()) return;\n        const headers = this.getHeaders();\n        props.isActive = true;\n        props.author = this.state.users.find((user) => user.username === this.state.username).id;\n        axios.post(getApiUrl(`notes`), {...props}, {headers})\n            .then(response => {\n                this.setState({notes: [...this.state.notes, response.data]})\n            })\n            .catch(error => console.log(error))\n    }\n\n    deleteProject(id) {\n        if (!this.isAuthenticated()) return;\n        const headers = this.getHeaders();\n        axios.delete(getApiUrl(`projects/${id}`), {headers})\n            .then(response => {\n                this.setState({projects: this.state.projects.filter((project) => project.id !== id)})\n            })\n            .catch(error => console.error(error));\n    }\n\n    createProject(props) {\n        if (!this.isAuthenticated()) return;\n        const headers = this.getHeaders();\n        props.users = [props.users,];\n        axios.post(getApiUrl(`projects`), {...props}, {headers})\n            .then(response => {\n                this.setState({projects: [...this.state.projects, response.data]})\n            })\n            .catch(error => console.log(error))\n    }\n\n    updateProject(props) {\n        if (!this.isAuthenticated()) return;\n        const headers = this.getHeaders();\n        axios.patch(getApiUrl(`projects/${props.id}`), {...props}, {headers})\n            .then(response => {\n                this.setState({\n                    projects: this.state.projects.map((project) => {\n                        if (project.id === props.id) {\n                            project = {...props};\n                        }\n                        return project;\n                    })\n                })\n            })\n            .catch(error => console.error(error));\n    }\n\n\n    render() {\n        return (\n            <Router>\n                <Menu isAuthenticated={this.isAuthenticated()}\n                      logout={() => this.logout()}\n                      username={this.state.username}/>\n                <Switch>\n                    <Route exact path='/users' component={() => {\n                        if (!this.isAuthenticated()) return <Redirect to='/login'/>;\n                        return <UserList users={this.state.users}/>;\n                    }}/>\n                    <Route exact path='/projects' component={() => {\n                        if (!this.isAuthenticated()) return <Redirect to='/login'/>;\n                        return <ProjectList users={this.state.users}\n                                            projects={this.state.projects}\n                                            deleteProject={(id) => this.deleteProject(id)}/>;\n                    }}/>\n                    <Route exact path='/projects/create' component={() => {\n                        return <ProjectForm users={this.state.users}\n                                            createProject={(props) => this.createProject(props)}/>\n                    }}/>\n                    <Route path='/projects/:projectId' component={() => {\n                        if (!this.isAuthenticated()) return <Redirect to='/login'/>;\n                        return <ProjectNotesList users={this.state.users}\n                                                 projects={this.state.projects}\n                                                 notes={this.state.notes}\n                                                 deleteProject={(id) => this.deleteProject(id)}\n                                                 updateProject={(props) => this.updateProject(props)}\n                                                 updateNote={(id) => this.updateNote(id)}/>\n                    }}/>\n                    <Route exact path='/notes' component={() => {\n                        if (!this.isAuthenticated()) return <Redirect to='/login'/>;\n                        return <NoteList users={this.state.users}\n                                         notes={this.state.notes}\n                                         projects={this.state.projects}\n                                         updateNote={(id) => this.updateNote(id)}/>;\n                    }}/>\n                    <Route exact path='/notes/create' component={() => {\n                        return <NoteForm projects={this.state.projects}\n                                         createNote={(props) => this.createNote(props)}/>\n                    }}/>\n                    <Route exact path='/login' component={() => {\n                        if (this.isAuthenticated()) return <Redirect to='/'/>;\n                        return <LoginForm getToken={(username, password) => this.getTokenAndUser(username, password)}/>\n                    }}/>\n                    <Redirect from='/' to='/projects'/>\n                    <Route component={notFound404}/>\n                </Switch>\n                <Footer/>\n            </Router>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}